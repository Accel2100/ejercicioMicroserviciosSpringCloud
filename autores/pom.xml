<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>es.ejercicio.microservicios</groupId>
	<artifactId>autores</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>autores</name>
	<description>MS Autores</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.8.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<ejercicio-dto.version>0.0.1-SNAPSHOT</ejercicio-dto.version>
		<dozer.version>5.5.1</dozer.version>
		<project.build.finalName>${project.name}</project.build.finalName>
		<artifact.extension>jar</artifact.extension>
		<maven-docker-fabric8.version>0.23.0</maven-docker-fabric8.version>
		<spring-cloud.version>Dalston.SR4</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-oauth2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>es.ejercicio.microservicios</groupId>
			<artifactId>ejercicio-dto</artifactId>
			<version>${ejercicio-dto.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
			<version>${dozer.version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.7.9</version>
						<executions>
							 <execution>
							            <id>pre-integration-test</id>
							            <phase>pre-integration-test</phase>
							            <goals>
							                <goal>prepare-agent</goal>
							            </goals>
							            <configuration>
							                <!-- Establece el path al archivo que contiene la informaci贸n de ejecuci贸n. -->
							                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
							                <!--
							                   Establece la propiedad que contiene la configuraci贸n del agente
							JaCoCo runtime agent.
							               -->
							                <propertyName>failsafeArgLine</propertyName>
							            </configuration>
							        </execution>
							        <!--
							           Asegura que los informes de cobertura para los test de integraci贸n seran ejecutados despues de ejecutar los test de integracion.
							       -->
							        <execution>
							            <id>post-integration-test</id>
							            <phase>post-integration-test</phase>
							            <goals>
							                <goal>report</goal>
							            </goals>
							            <configuration>
							                <!-- Establece el path al archivo que contiene los datos de ejecucion. -->
							                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
							                <!-- Establece el directorio de salida para los test de cobertura. -->
							                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
							            </configuration>
							        </execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${maven-docker-fabric8.version}</version>
						<configuration>
							<logDate>medium</logDate>
							<images>
								<image>
									<name>${project.name}:${project.version}</name>
									<alias>${project.name}</alias>
									<build>
										<from>java:8u40</from>
										<assembly>
											<descriptorRef>artifact-with-dependencies</descriptorRef>
										</assembly>
										<cmd>java -Djava.security.egd=file:/dev/./urandom -jar -Xdebug /maven/${project.build.finalName}.${artifact.extension}</cmd>
									</build>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>build</goal>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
